version: 2.1
workflows:
  env-vars:
    jobs:
      - build:
          context: microservice
jobs:
  build:
    working_directory: /udagram-reverseproxy
    docker:
      - image: docker:17.05.0-ce-git
        auth:
          username: $DOCKER_HUB_USER_ID
          password: $DOCKER_HUB_PWD
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1
            pip install \
              docker-compose==1.15.0 \
              awscli==1.11.76
      - run:
          name: docker build
          command: |
            docker build -t udagram-reverseproxy .
      - deploy:
          name: Push application Docker image
          command: |
            docker login -u $DOCKER_HUB_USER_ID -p $DOCKER_HUB_PWD
            docker tag udagram-reverseproxy $DOCKER_HUB_USER_ID/udagram-reverseproxy:v1
            docker push $DOCKER_HUB_USER_ID/udagram-reverseproxy:v1
      # - run:
      #     name: docker run
      #     command: |
      #       docker run -p 8080:8080 udagram-reverseproxy
 
#  eksctl create cluster --name microservice-cluster --region us-east-1 --version 1.23 --vpc-public-subnets subnet-ExampleID1,subnet-ExampleID2 --without-nodegroup

# aws eks create-cluster --region us-east-1 --name microservice-cluster --kubernetes-version 1.23 \
#    --role-arn arn:aws:iam::741317975698:role/myAmazonEKSClusterRole \
#    --resources-vpc-config subnetIds=subnet-0822db070d8f0c29c,subnet-047b8f57a643357ba,securityGroupIds=sg-0f0d056df0fac3594

# aws eks describe-cluster \
# --region us-east-1 \
# --name microservice-cluster \
# --query "cluster.status"

# aws eks update-kubeconfig --region us-east-1 --name microservice-cluster

# aws iam create-role \
#   --role-name AmazonEKSNodeRole \
#   --assume-role-policy-document file://"node-role-trust-relationship.json"

# aws iam attach-role-policy \
#   --policy-arn arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy \
#   --role-name AmazonEKSNodeRole
# aws iam attach-role-policy \
#   --policy-arn arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly \
#   --role-name AmazonEKSNodeRole

# aws iam attach-role-policy \
#   --policy-arn arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy \
#   --role-name AmazonEKSNodeRole